{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","template","constructor","selector","targetDate","getRefs","daysRef","document","querySelector","hoursRef","minsRef","secsRef","getDate","target","time","Date","days","Math","floor","hours","pad","mins","secs","value","String","padStart","start","insertAdjacentHTML","setInterval","textContent","wordsEndings","daysEnd","hoursEnd","minsEnd","secsEnd","timer4Template","timer4Template2"],"mappings":";;;AAsIeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EArIf,MAAMC,EAAW,IAAO,8tBA8BxB,MAAMD,EACFE,aAAY,SAAEC,EAAF,WAAYC,IACfA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EAGpBE,UAMW,MAAA,CAAEC,QALOC,SAASC,iBAAiB,KAAKL,oCAK7BM,SAJDF,SAASC,iBAAiB,KAAKL,qCAIpBO,QAHZH,SAASC,iBAAiB,KAAKL,oCAGVQ,QAFrBJ,SAASC,iBAAiB,KAAKL,qCAKnDS,QAAQC,GACEC,MAAAA,EAAO,IAAIC,KAAKF,GAAU,IAAIE,KAO7B,MAAA,CAAEC,KALIC,KAAKC,MAAMJ,EAAQ,OAKjBK,MAJD,KAAKC,IAAIH,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CO,KAHT,KAAKD,IAAIH,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCQ,KAFf,KAAKF,IAAIH,KAAKC,MAAOJ,EAAQ,IAAc,OAK5DM,IAAIG,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAIrCC,QACInB,SAASC,cAAc,KAAKL,UAAUwB,mBAAmB,YAAa1B,KAEtE2B,YAAY,KACJ,IAAIb,KAAK,KAAKX,aAAe,IAAIW,MAC7BV,KAAAA,UAAUC,QAAQuB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYY,KAC9DX,KAAAA,UAAUI,SAASoB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYe,MAC/Dd,KAAAA,UAAUK,QAAQmB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYiB,KAC9DhB,KAAAA,UAAUM,QAAQkB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYkB,KAC7DQ,KAAAA,iBAIAzB,KAAAA,UAAUC,QAAQuB,YAAc,IAChCxB,KAAAA,UAAUI,SAASoB,YAAc,KACjCxB,KAAAA,UAAUK,QAAQmB,YAAc,KAChCxB,KAAAA,UAAUM,QAAQkB,YAAc,OAE1C,KAGPC,eACUC,MAAAA,EAAUxB,SAASC,iBAAiB,KAAKL,2BACzC6B,EAAWzB,SAASC,iBAAiB,KAAKL,4BAC1C8B,EAAU1B,SAASC,iBAAiB,KAAKL,8BACzC+B,EAAU3B,SAASC,iBAAiB,KAAKL,8BAGvC,OAAA,KAAKE,UAAUM,QAAQkB,aACd,IAAA,KACTK,EAAQL,YAAc,SAClB,MAER,QACIK,EAAQL,YAAc,UAItB,OAAA,KAAKxB,UAAUK,QAAQmB,aACd,IAAA,KACTI,EAAQJ,YAAc,SAClB,MAER,QACII,EAAQJ,YAAc,UAGtB,OAAA,KAAKxB,UAAUI,SAASoB,aACf,IAAA,KACTG,EAASH,YAAc,OACnB,MAER,QACIG,EAASH,YAAc,QAGvB,OAAA,KAAKxB,UAAUC,QAAQuB,aACd,IAAA,IACTE,EAAQF,YAAc,MAClB,MAER,QACIE,EAAQF,YAAc,SAUvB7B,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACvHf,aAfA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,oBAcA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAZA,MAAMmC,EAAiB,IAAInC,EAAJ,QAAmB,CACxCG,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAGvBoB,EAAeT,QAEf,MAAMU,EAAkB,IAAIpC,EAAJ,QAAmB,CACzCG,SAAU,WACVC,WAAY,IAAIW,KAAK,2BAGvBqB,EAAgBV","file":"src.557060d9.js","sourceRoot":"../src","sourcesContent":["\nconst template = () => `\n<div class=\"timer-section\">\n<div class=\"days-block\">\n    <span class=\"days\" data-value=\"days\"></span>\n    <span class=\"uncorrectDays\">Days</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"hours-block\">\n    <span class=\"hours\" data-value=\"hours\"></span>\n    <span class=\"uncorrectHours\">Hours</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"minutes-block\">\n    <span class=\"minutes\" data-value=\"mins\"></span>\n    <span class=\"uncorrectMinutes\">Minutes</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"seconds-block\">\n    <span class=\"seconds\" data-value=\"secs\"></span>\n    <span class=\"uncorrectSeconds\">Seconds</span>\n  </div>\n  </div>\n  `;\n\nclass CountdownTimer{\n    constructor({ selector, targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n    }\n    \n    getRefs() {\n        const daysRef = document.querySelector(`${this.selector} span[data-value=\"days\"]`);\n        const hoursRef = document.querySelector(`${this.selector} span[data-value=\"hours\"]`);\n        const minsRef = document.querySelector(`${this.selector} span[data-value=\"mins\"]`);\n        const secsRef = document.querySelector(`${this.selector} span[data-value=\"secs\"]`);\n\n        return { daysRef, hoursRef, minsRef, secsRef };\n    }\n    \n    getDate(target) {\n        const time = new Date(target) - new Date();\n        \n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    };\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    };\n    \n    \n    start() {\n        document.querySelector(this.selector).insertAdjacentHTML('beforeend', template());\n\n        setInterval(() => {\n            if (new Date(this.targetDate) >= new Date()) {\n               this.getRefs().daysRef.textContent = this.getDate(this.targetDate).days;\n               this.getRefs().hoursRef.textContent = this.getDate(this.targetDate).hours;\n               this.getRefs().minsRef.textContent = this.getDate(this.targetDate).mins;\n               this.getRefs().secsRef.textContent = this.getDate(this.targetDate).secs;\n                this.wordsEndings();\n                \n            }\n            else {\n                this.getRefs().daysRef.textContent = '0';\n                this.getRefs().hoursRef.textContent = '00';\n                this.getRefs().minsRef.textContent = '00';\n                this.getRefs().secsRef.textContent = '00';\n            }\n        }, 100);\n    }\n\n    wordsEndings() {\n        const daysEnd = document.querySelector(`${this.selector} .uncorrectDays`);\n        const hoursEnd = document.querySelector(`${this.selector} .uncorrectHours`);\n        const minsEnd = document.querySelector(`${this.selector} .uncorrectMinutes`);\n        const secsEnd = document.querySelector(`${this.selector} .uncorrectSeconds`);\n\n        \n        switch (this.getRefs().secsRef.textContent) {\n                    case '01':\n                secsEnd.textContent = \"Second\";\n                    break;\n                \n            default:\n                secsEnd.textContent = \"Seconds\";\n                        break;\n                }\n        \n        switch (this.getRefs().minsRef.textContent) {\n                    case '01':\n                minsEnd.textContent = \"Minute\";\n                    break;\n                \n            default:\n                minsEnd.textContent = \"Minutes\";\n                        break;\n        }\n        switch (this.getRefs().hoursRef.textContent) {\n                    case '01':\n                hoursEnd.textContent = \"Hour\";\n                    break;\n                \n            default:\n                hoursEnd.textContent = \"Hours\";\n                        break;\n        }\n        switch (this.getRefs().daysRef.textContent) {\n                    case '1':\n                daysEnd.textContent = \"Day\";\n                    break;\n                \n            default:\n                daysEnd.textContent = \"Days\";\n                        break;\n                }\n\n    }\n\n\n}\n\n\nexport default CountdownTimer;\n\n\n","import './sass/main.scss';\nimport CountdownTimer from'../src/js/timer';\n\nconst timer4Template = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate: new Date('Jul 17, 2022'),\n});\n\ntimer4Template.start();\n\nconst timer4Template2 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 24, 2021 11:47:18'),\n});\n\ntimer4Template2.start()"]}