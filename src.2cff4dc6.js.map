{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","template","constructor","selector","targetDate","getRefs","daysRef","document","querySelector","hoursRef","minsRef","secsRef","getDate","target","time","Date","days","Math","floor","hours","pad","mins","secs","value","String","padStart","start","insertAdjacentHTML","setInterval","textContent","timer4Template","timer4Template2"],"mappings":";;;AAqFeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApFf,MAAMC,EAAW,IAAO,8tBAgCxB,MAAMD,EACFE,aAAY,SAAEC,EAAF,WAAYC,IACfA,KAAAA,WAAaA,EACbD,KAAAA,SAAWA,EAGpBE,UAMW,MAAA,CAAEC,QALOC,SAASC,iBAAiB,KAAKL,oCAK7BM,SAJDF,SAASC,iBAAiB,KAAKL,qCAIpBO,QAHZH,SAASC,iBAAiB,KAAKL,oCAGVQ,QAFrBJ,SAASC,iBAAiB,KAAKL,qCAKnDS,QAAQC,GACEC,MAAAA,EAAO,IAAIC,KAAKF,GAAU,IAAIE,KAO7B,MAAA,CAAEC,KALIC,KAAKC,MAAMJ,EAAQ,OAKjBK,MAJD,KAAKC,IAAIH,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CO,KAHT,KAAKD,IAAIH,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCQ,KAFf,KAAKF,IAAIH,KAAKC,MAAOJ,EAAQ,IAAc,OAK5DM,IAAIG,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAIrCC,QACInB,SAASC,cAAc,KAAKL,UAAUwB,mBAAmB,YAAa1B,KAEtE2B,YAAY,KACJ,IAAIb,KAAK,KAAKX,aAAe,IAAIW,MAC7BV,KAAAA,UAAUC,QAAQuB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYY,KAC9DX,KAAAA,UAAUI,SAASoB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYe,MAC/Dd,KAAAA,UAAUK,QAAQmB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYiB,KAC9DhB,KAAAA,UAAUM,QAAQkB,YAAc,KAAKjB,QAAQ,KAAKR,YAAYkB,OAG7DjB,KAAAA,UAAUC,QAAQuB,YAAc,IAChCxB,KAAAA,UAAUI,SAASoB,YAAc,IACjCxB,KAAAA,UAAUK,QAAQmB,YAAc,IAChCxB,KAAAA,UAAUM,QAAQkB,YAAc,MAE1C,MAKI7B,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACtEf,aAfA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,oBAcA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAZA,MAAM8B,EAAiB,IAAI9B,EAAJ,QAAmB,CACxCG,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAGvBe,EAAeJ,QAEf,MAAMK,EAAkB,IAAI/B,EAAJ,QAAmB,CACzCG,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAGvBgB,EAAgBL","file":"src.2cff4dc6.js","sourceRoot":"../src","sourcesContent":["\nconst template = () => `\n<div class=\"timer-section\">\n<div class=\"days-block\">\n    <span class=\"days\" data-value=\"days\"></span>\n    <span class=\"uncorrectDays\">Days</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"hours-block\">\n    <span class=\"hours\" data-value=\"hours\"></span>\n    <span class=\"uncorrectHours\">Hours</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"minutes-block\">\n    <span class=\"minutes\" data-value=\"mins\"></span>\n    <span class=\"uncorrectMinutes\">Minutes</span>\n  </div>\n  </div>\n\n  <div class=\"timer-section\">\n  <div class=\"seconds-block\">\n    <span class=\"seconds\" data-value=\"secs\"></span>\n    <span class=\"uncorrectSeconds\">Seconds</span>\n  </div>\n  </div>\n  `;\n\n\n\nclass CountdownTimer{\n    constructor({ selector, targetDate }) {\n        this.targetDate = targetDate;\n        this.selector = selector;\n    }\n    \n    getRefs() {\n        const daysRef = document.querySelector(`${this.selector} span[data-value=\"days\"]`);\n        const hoursRef = document.querySelector(`${this.selector} span[data-value=\"hours\"]`);\n        const minsRef = document.querySelector(`${this.selector} span[data-value=\"mins\"]`);\n        const secsRef = document.querySelector(`${this.selector} span[data-value=\"secs\"]`);\n\n        return { daysRef, hoursRef, minsRef, secsRef };\n    }\n    \n    getDate(target) {\n        const time = new Date(target) - new Date();\n        \n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { days, hours, mins, secs };\n    };\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    };\n    \n    \n    start() {\n        document.querySelector(this.selector).insertAdjacentHTML('beforeend', template());\n\n        setInterval(() => {\n            if (new Date(this.targetDate) >= new Date()) {\n               this.getRefs().daysRef.textContent = this.getDate(this.targetDate).days;\n               this.getRefs().hoursRef.textContent = this.getDate(this.targetDate).hours;\n               this.getRefs().minsRef.textContent = this.getDate(this.targetDate).mins;\n               this.getRefs().secsRef.textContent = this.getDate(this.targetDate).secs;\n            }\n            else {\n                this.getRefs().daysRef.textContent = '0';\n                this.getRefs().hoursRef.textContent = '0';\n                this.getRefs().minsRef.textContent = '0';\n                this.getRefs().secsRef.textContent = '0';\n            }\n        }, 100);\n    }\n}\n\n\nexport default CountdownTimer;\n\n\n","import './sass/main.scss';\nimport CountdownTimer from'../src/js/timer';\n\nconst timer4Template = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2022'),\n});\n\ntimer4Template.start();\n\nconst timer4Template2 = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate: new Date('Nov 17, 2021'),\n});\n\ntimer4Template2.start()"]}